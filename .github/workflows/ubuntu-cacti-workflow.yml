name: "Ubuntu cacti CI workflow"


on:
  push:
    branches: [ test ]
jobs:
 

 
       

  ubuntu-1604-job:
    name: "ubuntu-16.04"
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status  
    - name: "update"
      run:  sudo apt-get update
    - name: "Install Apache & MariaDB"
      run:  sudo apt-get install -y  apache2 mariadb-server mariadb-client php-mysql libapache2-mod-php libapache2-mod-php7.0
    - name: "Install PHP Extensions"
      run: sudo apt-get  install -y php-xml php-ldap php-mbstring php-gd php-gmp      
    - name: "Install SNMP"
      run: sudo apt-get install -y snmp php-snmp rrdtool librrds-perl       
    - name: "Install cacti"
      run: |
        wget --no-check-certificate https://www.cacti.net/downloads/cacti-latest.tar.gz
        tar -zxvf cacti-latest.tar.gz
        sudo mv cacti-1* /opt/cacti
    - name: "Configure the firewall to allow Cacti to fetch the data from client machines"
      run: |
        sudo ufw enable
        sudo ufw allow 161/udp
        sudo ufw reload
        sudo ufw status

  ubuntu-1804-job:
    name: "ubuntu-18.04"
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status  
    - name: "update"
      run:  sudo apt-get update
    - name: "Install Apache & MariaDB"
      run:  sudo apt-get install -y  apache2 mariadb-server mariadb-client php-mysql libapache2-mod-php
    - name: "Install PHP Extensions"
      run: sudo apt-get  install -y php-xml php-ldap php-mbstring php-gd php-gmp      
    - name: "Install SNMP"
      run: sudo apt-get install -y snmp php-snmp rrdtool librrds-perl       
    - name: "Install cacti"
      run: |
        wget --no-check-certificate https://www.cacti.net/downloads/cacti-latest.tar.gz
        tar -zxvf cacti-latest.tar.gz
        sudo mv cacti-1* /opt/cacti
    - name: "Configure the firewall to allow Cacti to fetch the data from client machines"
      run: |
        sudo ufw enable
        sudo ufw allow 161/udp
        sudo ufw reload
        sudo ufw status

#https://docs.librenms.org/Installation/Install-LibreNMS/
  ubuntu-2004-cacti-job:
    name: "ubuntu-20.04 cacti job"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "update"
      run:  sudo apt-get update
    - name: "Install Apache & MariaDB"
      run:  sudo apt-get install -y  apache2 mariadb-server mariadb-client php-mysql libapache2-mod-php
    - name: "Install PHP Extensions"
      run: sudo apt-get  install -y php-xml php-ldap php-mbstring php-gd php-gmp      
    - name: "Install SNMP"
      run: sudo apt-get install -y snmp php-snmp rrdtool librrds-perl       
    - name: "Install cacti"
      run: |
        wget --no-check-certificate https://www.cacti.net/downloads/cacti-latest.tar.gz
        tar -zxvf cacti-latest.tar.gz
        sudo mv cacti-1* /opt/cacti
    - name: "Configure the firewall to allow Cacti to fetch the data from client machines"
      run: |
        sudo ufw enable
        sudo ufw allow 161/udp
        sudo ufw reload
        sudo ufw status

  ubuntu-job:
    name: "ubuntu-latest"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status   
    - name: "update"
      run:  sudo apt-get update
    - name: "Install Apache & MariaDB"
      run:  sudo apt-get install -y  apache2 mariadb-server mariadb-client php-mysql libapache2-mod-php
    - name: "Install PHP Extensions"
      run: sudo apt-get  install -y php-xml php-ldap php-mbstring php-gd php-gmp      
    - name: "Install SNMP"
      run: sudo apt-get install -y snmp php-snmp rrdtool librrds-perl       
    - name: "Install cacti"
      run: |
        wget --no-check-certificate https://www.cacti.net/downloads/cacti-latest.tar.gz
        tar -zxvf cacti-latest.tar.gz
        sudo mv cacti-1* /opt/cacti
    - name: "Configure the firewall to allow Cacti to fetch the data from client machines"
      run: |
        sudo ufw enable
        sudo ufw allow 161/udp
        sudo ufw reload
        sudo ufw status